<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd  
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">
	<description>Spring公共配置文件</description>
	<context:property-placeholder location="classpath:application.properties" />

	<!-- dataSource -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/iif" />
		<property name="username" value="iif" />
		<property name="password" value="iif123" />
	</bean>

	<import resource="quartz.xml" />

	<!-- sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">s
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.iif.*.entity</value>
				<value>com.iif.*.*.entity</value>
			</list>
		</property>
		<property name="mappingLocations">
			<list>
				<value>classpath:/com/iif/**/entity/*.hbm.xml</value>
				<value>classpath:/com/iif/**/**/entity/*.hbm.xml</value>
			</list>
		</property>
	</bean>

	<!-- BaseDao支持start -->
	<bean id="HibernateDaoSupport"
		class="com.hxjz.common.core.orm.daoWrapper.HibernateDaoSupportWrapper">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	<!-- JdbcDaoSupport -->
	<bean id="JdbcDaoSupport"
		class="com.hxjz.common.core.orm.daoWrapper.JdbcDaoSupportWrapper">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>
	<!-- HibernateDaoSupport and JdbcDaoSupport -->
	<bean id="DaoSupport" class="com.hxjz.common.core.orm.daoWrapper.DaoSupport">
		<property name="hibernateDaoSupport">
			<ref local="HibernateDaoSupport" />
		</property>
		<property name="jdbcDaoSupport">
			<ref local="JdbcDaoSupport" />
		</property>
	</bean>
	<!-- GenericDao -->
	<bean id="com.hxjz.common.core.orm.GenericDao" class="com.hxjz.common.core.orm.GenericDao" />
	<!-- BaseDao支持end -->

	<!-- 事物 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 自动扫描BEAN(annotation) -->
	<context:component-scan base-package="com.iif">
	</context:component-scan>

	<!-- annotation定义事物 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 注入jedis begin -->
	<!-- POOL配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="${redis.pool.maxActive}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="maxWait" value="${redis.pool.maxWait}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>

	<!-- jedis shard信息配置 -->
	<bean id="jedis.shardInfo" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg index="0" value="${redis.ip}" />
		<constructor-arg index="1" value="${redis.port}" />
	</bean>

	<!-- jedis shard pool配置 -->
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1">
			<list>
				<ref bean="jedis.shardInfo" />
			</list>
		</constructor-arg>
	</bean>
	<bean id="redisUtil" class="com.iif.common.util.RedisUtil">
		<property name="shardedJedisPool" ref="shardedJedisPool" />
	</bean>
	<!-- 注入jedis end -->

</beans>